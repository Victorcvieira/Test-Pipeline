name: UiPathBuildDeploy
on:
  push:
    branches: [ main ]
jobs:
 remove-old-artifacts:
    runs-on: windows-latest
    timeout-minutes: 10
    steps:
    - name: Remove old artifacts
      uses: c-hive/gha-remove-artifacts@v1
      with:
        age: '1 month'
 Build:
    runs-on: windows-latest
    needs: remove-old-artifacts
    steps:            
      # Checkout code from this repo
      - name: Checkout Code
        uses: actions/checkout@v2      
      # Facilitate the UiPath CLI in the github artifacts
      - name: Get UiPath CLI
        run: |
                 New-Item -Path "C:\\" -ItemType "directory" -Name "uipathcli";
                 Invoke-WebRequest "https://uipath.pkgs.visualstudio.com/Public.Feeds/_apis/packaging/feeds/1c781268-d43d-45ab-9dfc-0151a1c740b7/nuget/packages/UiPath.CLI.Windows/versions/23.10.8894.39673/content" -OutFile "C:\\uipathcli\\cli.zip";
                 Expand-Archive -LiteralPath "C:\\uipathcli\\cli.Zip" -DestinationPath "C:\\uipathcli";
      # Use uipcli to package and deploy (for each project.json found)                           
      - name: Pack and Deploy
        run: |
                foreach($package in Get-ChildItem -Path ${{ github.workspace }} -Recurse -Filter project.json -File)
                       {    
                          # Get some data from the package.json for package naming
                          $json = Get-Content "$package" | Out-String | ConvertFrom-Json
                          $foo = $json.projectVersion
                          $Name=$json.name
                          echo "::set-output name=PATH::$package"
                          echo $foo
                          $v= [version] "$foo"
                          $newversion= "{0}.{1}.{2}.{3}" -f $v.Major, $v.Minor, ($v.Build),"${{github.run_number}}"
                          $VERSION=[string]$newversion
                          echo $VERSION
                          echo $Name
                          echo ${{ github.workspace }}\$Name.$VERSION.nupkg
                          # Build and Deploy the Package
                          & "C:\\uipathcli\\tools\\uipcli.exe" package pack "$package" -o "${{ github.workspace }}" -v $VERSION -l en-US --libraryOrchestratorUrl "https://staging.uipath.com/" --libraryOrchestratorAccountForApp "victorvieira" --libraryOrchestratorTenant "PROD_Victor" --libraryOrchestratorApplicationId "f50245b6-fe68-4e98-878b-9f1ee5ba5b95" --libraryOrchestratorApplicationSecret "fzxVtA^8k3FUbiHc" --libraryOrchestratorApplicationScope OR.Administration OR.Analytics OR.Assets OR.Audit OR.BackgroundTasks OR.Execution OR.Folders OR.Hypervisor OR.Jobs OR.License OR.Machines OR.ML OR.Monitoring OR.Queues OR.Robots OR.Settings OR.Tasks OR.TestSetExecutions OR.TestSets OR.TestSetSchedules OR.Users OR.Webhooks --libraryOrchestratorFolder "Shared"
                          & "C:\\uipathcli\\tools\\uipcli.exe" package deploy "${{ github.workspace }}\$($Name).$VERSION.nupkg" "https://staging.uipath.com/" "${{secrets.TENANT_NAME}}" -A ${{secrets.ACCOUNT_NAME}} -I ${{secrets.OAUTH_CLIENT_ID}} -S "${{secrets.OAUTH_CLIENT_SECRET}}" -o "${{secrets.ORCH_FOLDER}}" --applicationScope "${{secrets.OAUTH_CLIENT_SCOPES}}" -h Main.xaml 
                       }
      # Persist build artifacts
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.0
        
        with:	 
             name: ProjectFiles
             path: ${{ github.workspace }}/**
             if-no-files-found: error
             retention-days: 2
